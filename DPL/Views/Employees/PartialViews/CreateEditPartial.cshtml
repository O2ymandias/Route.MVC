@model EmployeeVm
@inject IUnitOfWork _unitOfWork
@{
	var departments = await _unitOfWork.Repository<Department>().GetAllAsync();
	var departmentsSelectItems = new SelectList(departments, nameof(Department.Id), nameof(Department.Name));
}
<div class="form-group">
	<label class="form-label" asp-for="Name"></label>
	<input class="form-control" asp-for="Name" />
	<span class="text-danger" asp-validation-for="Name"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="Age"></label>
	<input class="form-control" asp-for="Age" />
	<span class="text-danger" asp-validation-for="Age"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="Address"></label>
	<input class="form-control" asp-for="Address" />
	<span class="text-danger" asp-validation-for="Address"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="Salary"></label>
	<input class="form-control" asp-for="Salary" />
	<span class="text-danger" asp-validation-for="Salary"></span>
</div>
<br />
<div class="form-group">
	<label class="form-check-label" asp-for="IsActive"></label>
	<input class="form-check-input" asp-for="IsActive" />
	<span class="text-danger" asp-validation-for="IsActive"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="PhoneNumber"></label>
	<input class="form-control" asp-for="PhoneNumber" />
	<span class="text-danger" asp-validation-for="PhoneNumber"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="EmailAddress"></label>
	<input class="form-control" asp-for="EmailAddress" />
	<span class="text-danger" asp-validation-for="EmailAddress"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="HiringDate"></label>
	<input class="form-control" asp-for="HiringDate" />
	<span class="text-danger" asp-validation-for="HiringDate"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label">Gender</label>
	@foreach (var gender in Enum.GetValues<Gender>())
	{
		var genderNumericValue = (int)gender;
		var genderStringValue = gender.ToString();
		<div class="form-check">
			@if (Model?.Gender == gender)
			{
				<input checked class="form-check-input" type="radio" asp-for="Gender" id="@genderStringValue" value="@genderNumericValue" />
			}
			else
			{
				<input class="form-check-input" type="radio" asp-for="Gender" id="@genderStringValue" value="@genderNumericValue" />
			}
			<label class="form-check-label" for="@genderStringValue">@genderStringValue</label>
		</div>
	}
	<span class="text-danger" asp-validation-for="Gender"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label">Employee Type</label>
	@foreach (var type in Enum.GetValues<EmployeeType>())
	{
		var typeNumericValue = (int)type;
		var typeStringValue = type.ToString();
		<div class="form-check">
			@if (Model?.EmployeeType == type)
			{
				<input checked class="form-check-input" type="radio" asp-for="EmployeeType" id="@typeStringValue" value="@typeNumericValue" />
			}
			else
			{
				<input class="form-check-input" type="radio" asp-for="EmployeeType" id="@typeStringValue" value="@typeNumericValue" />
			}
			<label class="form-check-label" for="@typeStringValue">@typeStringValue</label>
		</div>
	}
	<span class="text-danger" asp-validation-for="EmployeeType"></span>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="Department"></label>
	<select class="form-control" asp-for="DepartmentId" asp-items="departmentsSelectItems">
		<option class="text-center" value="@null">Select Department</option>
	</select>
</div>
<br />
<div class="form-group">
	<label class="form-label" asp-for="Image"></label>
	<input class="form-control" asp-for="Image" />
</div>